OB NOTES
====================
* To comply to GDPR, please only enter test data
* We want to trash data in heruko every 24h as a security measure
* We have no access constraints on the app
* Due to the request for speed, I may run the Mongo in passwordless mode (this is the first time in my life I have done that )
* I plan to say "this is very simple code", I will avoid spotting the issues that typescript is good for, by not writing them
* I really do not want to argue with webpack, babel or other build tools, not enough time
* oss-test-2022-08 https://git.heroku.com/oss-test-2022-08.git   maintenance is ON
* https://cloud.mongodb.com/v2/62e2f59fa4b692502023f380#clusters 
* mongo "mongodb+srv://cluster0.4phrrdq.mongodb.net/myFirstDatabase" --username test
* git@github.com:owenBeresford/OSStest.git
* The default face was taken from https://www.reshot.com/free-svg-icons/face/
* After that date, I have added more type files, Storybook tests, a Jest API test, added some international alphabet char tests.
* I have improved the UI /design; I need to improve the RWD/ grid layouts aspects
* I have improved the SIP and code isolation.  The FP architecture of React18 is easy to make messy.

RETROSPECTIVE:
If I did that again: I would copy the storybook config, focus on //design// CSS rather than accrete CSS, Add panels/ component design as mentioned in the design notes see https://www.npmjs.com/package/react-foundation.  Get a better solution to accreting data in forms, whilst FP/ react18. Code was added quickly, I prefer to design interactions first, look at components stacked by z-index
I did do:  minimal small screen design, required features, import specific UI-widgets, data cleanlyness (i.e. GDPR), use a new app-starter
First piece of work with no comp or sketch in ages; due to short timescales, poor design practice
Building component tests via Storybook is a much better experience than hand-builds. I am retiring Mocha for unit tests, whilst writing ES6 or greater; I am now using Jest for API tests; I am using import and modules in node API, so I only use 1 edition of JS.  

to learn: component design tools


* IOIO https://devcenter.heroku.com/articles/getting-started-with-nodejs?singlepage=true
* IOIO https://reactjs.org/docs/create-a-new-react-app.html
* IOIO https://github.com/rahmanfadhil/learn-express-mongoose 
* IOIO let tt2={ name:"TEST", dob:new Date(), team:"TEST", gender:"TEST", sports:[], about:"", interests:"", image:"" };
* IOIO https://spin.atomicobject.com/2020/08/17/cra-express-share-code/


